.data
A .word 0,0,0,0,0,0,0,0,0,0
gp40: .word 0
.text
.global main
main:
	mov r6, #0
	mov r5, #0
	str R6, [r5]
	mov r6, #0
	mov r5, #0
	str R6, [r5]
WhileTrue1:
	mov r5, #0
	ldr r10, [r5]
	cmp r10, #10
	bge FalseWhileL1
	b WhileTrue1
FalseWhileL1:
	mov r6, #0
	mov r5, #0
	str R6, [r5]
WhileTrue2:
	mov r5, #0
	ldr r10, [r5]
	cmp r10, #10
	bge FalseWhileL2
	b WhileTrue2
FalseWhileL2:
	bkpt
Ordenar:
	mov r6, #0
	mov r5, #0
	str R6, [r5]
	mov r6, #0
	mov r5, #4
	str R6, [r5]
	mov r6, #0
	mov r5, #8
	str R6, [r5]
	mov r6, #0
	mov r5, #0
	str R6, [r5]
WhileTrue3:
	mov r5, #0
	ldr r10, [r5]
	cmp r10, #10
	bge FalseWhileL3
	mov r6, #0
	mov r5, #12
	str R6, [r5]
	b WhileTrue3
FalseWhileL3:
	bx lr
Minimo:
	mov r6, #0
	mov r5, #0
	str R6, [r5]
	mov r6, #0
	mov r5, #4
	str R6, [r5]
	mov r6, #0
	mov r5, #8
	str R6, [r5]
WhileTrue4:
	mov r5, #0
	ldr r10, [r5]
	cmp r10, #10
	bge FalseWhileL4
	mov r5, #4
	ldr r9, [r5]
	cmp #A[TL], r9
	bge FalseIfL1
FalseIfL1:
	b WhileTrue4
FalseWhileL4:
	bx lr
OutputInt:
	mov r6, #0
	mov r5, #0
	str R6, [r5]
	bx lr
InputInt:
	bx lr