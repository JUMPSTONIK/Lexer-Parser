.data
buffer: .space 4
.text 
	j main

factorial:
	addi $sp, $sp -8
	sw $ra, 4($sp)
	move $t7, $zero
	sw $t7, 0($sp)
	lw $t7, 8($sp)
	sw $t7, 0($sp)
	lw $t5, 0($sp)
	bne $t5, 0, FalseIfL1
	li $v1, 1
	j TrueIfL1
FalseIfL1:
	lw $t1, 0($sp)
	sub $t0, $t1, 1
	jal factorial
	move $t0, $v1
	lw $t1, 0($sp)
	mul $t0, $t1, $t0
TrueIfL1:
	lw $ra 4($sp)
	addi $sp, $sp, 12
	jr $ra

main:
	move $t7, $zero
	sw $t7, 0($sp)
	move $t7, $zero
	sw $t7, 0($sp)
WhileTrue1:
	lw $t5, 0($sp)
	bge $t5, 5, FalseWhileL1
	jal OutputInt
	 lw $t7, 0($sp)
	addi $sp, $sp, -4
	sw $t7, 0($sp)
	jal factorial
	lw $t1, 0($sp)
	addi $t0, $t1, 1
	sw $t0, 0($sp)
	j WhileTrue1
FalseWhileL1:
	li $v0, 10 
	syscall

OutputInt:
	addi $sp, $sp -8
	sw $ra, 4($sp)
	move $t7, $zero
	sw $t7, 0($sp)
	lw $t7, 8($sp)
	sw $t7, 0($sp)
	lw $ra 4($sp)
	addi $sp, $sp, 12
	jr $ra